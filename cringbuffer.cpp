#include "cringbuffer.h"

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//-Конструктор класса---------------------------------------------------------------------------------
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CRingBuffer::CRingBuffer(unsigned long size)
{ 
 Buffer=new unsigned char[size+1];
 Reset();
 Size=size;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//-Деструктор класса----------------------------------------------------------------------------------
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CRingBuffer::~CRingBuffer()
{
 delete[](Buffer);
}
//-Функции класса------------------------------------------------------------

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//открытые функции класса
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//----------------------------------------------------------------------------------------------------
//добавить байт в кольцевой буфер
//----------------------------------------------------------------------------------------------------
void CRingBuffer::PushByte(unsigned char b)
{
 Buffer[Head]=b;
 Head++;
 if (Head==Size) Head=0;
 if (Head==Tail) Tail++;
 if (Tail==Size) Tail=0;	
}
//----------------------------------------------------------------------------------------------------
//забрать байт из кольцевого буфера
//----------------------------------------------------------------------------------------------------
bool CRingBuffer::PopByte(unsigned char *b)
{
 if (Head==Tail) return(false);
 *b=Buffer[Tail];
 Tail++;
 if (Tail==Size) Tail=0;
 return(true);	
}

//----------------------------------------------------------------------------------------------------
//забрать два байта из кольцевого буфера
//----------------------------------------------------------------------------------------------------
bool CRingBuffer::PopShort(unsigned short *s)
{
 if (PopByte((unsigned char*)(s)+0)==false) return(false);
 if (PopByte((unsigned char*)(s)+1)==false) return(false);
 return(true);	
}

//----------------------------------------------------------------------------------------------------
//получить сколько байт в кольцевом буфере
//----------------------------------------------------------------------------------------------------
unsigned long CRingBuffer::GetDataSize(void) const
{
 if (Head<Tail) return(Size-Tail+Head);
 return(Head-Tail);
}
//----------------------------------------------------------------------------------------------------
//получить позицию головы буфера
//----------------------------------------------------------------------------------------------------
unsigned long CRingBuffer::GetHeadPos(void) const
{
 return(Head);
}
//----------------------------------------------------------------------------------------------------
//получить позицию хвоста буфера
//----------------------------------------------------------------------------------------------------
unsigned long CRingBuffer::GetTailPos(void) const
{
 return(Tail);
}
//----------------------------------------------------------------------------------------------------
//получить общий размер буфера
//----------------------------------------------------------------------------------------------------
unsigned long CRingBuffer::GetBufferSize(void) const
{
 return(Size);
}
//----------------------------------------------------------------------------------------------------
//удалить данные из буфера
//----------------------------------------------------------------------------------------------------
void CRingBuffer::Reset(void)
{
 Head=0;
 Tail=0;
}
//----------------------------------------------------------------------------------------------------
//получить значение из буфера
//----------------------------------------------------------------------------------------------------
unsigned char CRingBuffer::GetByte(unsigned long pos) const
{
 if (pos>=Size) return(0);
 return(Buffer[pos]);
}
//----------------------------------------------------------------------------------------------------
//задать позицию хвоста буфера
//----------------------------------------------------------------------------------------------------
void CRingBuffer::SetTailPos(unsigned long pos)
{
 if (pos>=Size) return;
 Tail=pos;
}
//----------------------------------------------------------------------------------------------------
//задать позицию головы буфера
//----------------------------------------------------------------------------------------------------
void CRingBuffer::SetHeadPos(unsigned long pos)
{
 if (pos>=Size) return;
 Head=pos;
}

