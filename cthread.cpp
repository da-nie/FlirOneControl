//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "cthread.h"

//****************************************************************************************************
//функция потока
//****************************************************************************************************

static DWORD WINAPI CThreadFunction(LPVOID ptr)
{
 CThread *cThread_Ptr=reinterpret_cast<CThread*>(ptr);
 cThread_Ptr->Routine(cThread_Ptr->Param);
 return(EXIT_SUCCESS);
}


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//конструктор и деструктор класса
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CThread::CThread(void* (*start_routine)(void*),void *param)
{
 Create(start_routine,param);
}
//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CThread::CThread(void)
{
 hThread=INVALID_HANDLE_VALUE;
}
//----------------------------------------------------------------------------------------------------
//деструктор
//----------------------------------------------------------------------------------------------------
CThread::~CThread()
{
 Join();
}

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//закрытые функции класса
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//открытые функции класса
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//----------------------------------------------------------------------------------------------------
//создать поток
//----------------------------------------------------------------------------------------------------
void CThread::Create(void* (*start_routine)(void*),void *param)
{
 if (hThread!=INVALID_HANDLE_VALUE) CloseHandle(hThread);
 Routine=start_routine;
 Param=param;
 hThread=CreateThread(NULL,0,CThreadFunction,this,0,NULL);
}

//----------------------------------------------------------------------------------------------------
//ждать завершения потока
//----------------------------------------------------------------------------------------------------
void CThread::Join(void)
{
 if (hThread==INVALID_HANDLE_VALUE) return;
 WaitForSingleObject(hThread,INFINITE);
 CloseHandle(hThread);
 hThread=INVALID_HANDLE_VALUE;
}

