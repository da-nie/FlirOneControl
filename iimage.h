#ifndef I_IMAGE_H
#define I_IMAGE_H

//****************************************************************************************************
//»нтерфейс к изображению
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include <vector>
#include <stdint.h>

//****************************************************************************************************
//макроопределени€
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объ€влени€
//****************************************************************************************************

//****************************************************************************************************
//»нтерфейс к изображению
//****************************************************************************************************
class IImage
{
 public:
  //-перечислени€---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
 public:
  //-деструктор-----------------------------------------------------------------------------------------
  virtual ~IImage() {}
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  virtual void GetRGBAImage(uint32_t &width,uint32_t &height,std::vector<uint32_t> &vector_image)=0;//получить изображение в формате RGBA
  virtual void SetRGBAImage(const uint32_t &width,const uint32_t &height,const std::vector<uint32_t> &vector_image)=0;//задать изображение в формате RGBA
  virtual void SetSize(uint32_t width,uint32_t height)=0;//задать размер изображени€ и выделить пам€ть
  virtual void SetRGBAPixel(uint32_t x,uint32_t y,uint32_t color)=0;//задать точку
  virtual uint32_t GetRGBAPixel(uint32_t x,uint32_t y)=0;//получить точку
  //-открытые статические функции-----------------------------------------------------------------------
};




#endif
