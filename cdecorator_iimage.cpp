//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "cdecorator_iimage.h"

//****************************************************************************************************
//глобальные переменные
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//конструктор и деструктор
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CDecorator_IImage::CDecorator_IImage(IImage *iImage_Set_Ptr)
{ 
 iImage_Ptr=iImage_Set_Ptr;
}
//----------------------------------------------------------------------------------------------------
//деструктор
//----------------------------------------------------------------------------------------------------
CDecorator_IImage::~CDecorator_IImage()
{
 delete(iImage_Ptr);
}

//****************************************************************************************************
//закрытые функции
//****************************************************************************************************

//****************************************************************************************************
//открытые функции
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//получить RGBA изображение
//----------------------------------------------------------------------------------------------------
void CDecorator_IImage::GetRGBAImage(uint32_t &width,uint32_t &height,std::vector<uint32_t> &vector_image)
{
 iImage_Ptr->GetRGBAImage(width,height,vector_image);
}
//----------------------------------------------------------------------------------------------------
//задать RGBA изображение
//----------------------------------------------------------------------------------------------------
void CDecorator_IImage::SetRGBAImage(const uint32_t &width,const uint32_t &height,const std::vector<uint32_t> &vector_image)
{
 iImage_Ptr->SetRGBAImage(width,height,vector_image);
}
//----------------------------------------------------------------------------------------------------
//задать размер изображения и выделить память
//----------------------------------------------------------------------------------------------------
void CDecorator_IImage::SetSize(uint32_t width,uint32_t height)
{
 iImage_Ptr->SetSize(width,height);
}
//----------------------------------------------------------------------------------------------------
//задать точку
//----------------------------------------------------------------------------------------------------
void CDecorator_IImage::SetRGBAPixel(uint32_t x,uint32_t y,uint32_t color)
{
 iImage_Ptr->SetRGBAPixel(x,y,color);
}
//----------------------------------------------------------------------------------------------------
//получить точку
//----------------------------------------------------------------------------------------------------
uint32_t CDecorator_IImage::GetRGBAPixel(uint32_t x,uint32_t y)
{
 return(iImage_Ptr->GetRGBAPixel(x,y));
}
